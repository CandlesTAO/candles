name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

# Cancel in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better git operations

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install 3.12

    - name: Install dependencies
      run: uv sync --dev

    - name: Cache pre-commit environments
      uses: actions/cache@v4
      with:
        path: ~/.cache/pre-commit
        key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          pre-commit-${{ runner.os }}-

    - name: Run pre-commit hooks
      run: |
        uv run pre-commit run --all-files --show-diff-on-failure --color=always

  test:
    name: Test (Python ${{ matrix.python-version }})
    needs: pre-commit  # Only run tests if code quality checks pass
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --dev

    - name: Run tests with coverage
      run: |
        if [ "${{ matrix.python-version }}" = "3.12" ]; then
          uv add --dev coverage[toml]
          uv run coverage run -m pytest tests/ --asyncio-mode=auto -v --tb=short
          uv run coverage report
          uv run coverage xml
        else
          uv run pytest tests/ --asyncio-mode=auto -v --tb=short
        fi

    - name: Upload coverage reports
      if: matrix.python-version == '3.12'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.xml
          htmlcov/

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  # Optional: Check if all required jobs passed
  ci-success:
    name: CI Success
    if: always()
    needs: [pre-commit, test]
    runs-on: ubuntu-latest
    steps:
    - name: Check CI Status
      run: |
        if [[ "${{ needs.pre-commit.result }}" != "success" ]] || \
           [[ "${{ needs.test.result }}" != "success" ]]; then
          echo "❌ CI failed"
          exit 1
        fi
        echo "✅ All CI checks passed"
